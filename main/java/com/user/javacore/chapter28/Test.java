package com.user.javacore.chapter28;

public class Test {
    /*
Даны два массива, содержащих числа от 0 до 9. Эти массивы представляют собой целые неотрицательные числа, разбитые в массив по десятичным разрядам. Например:

[1, 5, 2] (число 152)

[4, 2, 6] (число 426)

Нужно написать функцию, которая примет на вход два таких массива, вычислит сумму чисел, представленных массивами, и вернет результат в виде такого же массива:

[5, 7, 8] (число 578)

Числа, которые представлены массивами, могут быть любыми, в том числе очень большими (тысячи разрядов = элементов массива).

[1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7,
1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7.
1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7
1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7]

Импортировать другие классы нельзя
*/
    //999
    //999
    //1998

    //999
    //4
    public int[] summ(int[] array1, int[] array2){
        int[] resultArr;

        if (array1.length > array2.length) {
            resultArr = new int[array1.length + 1];
        } else {
            resultArr = new int[array2.length + 1];
        }

        int lengthResultArr = resultArr.length;
        int lengthArray1 = array1.length;
        int lengthArray2 = array2.length;
        int temp = 0;

        while (lengthArray1 >= 0 || lengthArray2 >= 0){
            int result = temp + (lengthArray1 > 0 ? array1[lengthArray1 - 1] : 0) + (lengthArray2 > 0 ? array2[lengthArray2 - 1] : 0);
            if (result > 9){
                resultArr[lengthResultArr - 1] = result % 10;
                temp = result / 10;
            }
            else{
                resultArr[lengthResultArr - 1] = result;
                temp = 0;
            }
            lengthResultArr--;
            lengthArray1--;
            lengthArray2--;
        }
        return resultArr;
    }
}
